{"version":3,"sources":["components/diceware-components/diceware-button.js","components/diceware-components/diceware-passwordrenderer.js","components/diceware-components/diceware-passwordseparator.js","components/diceware-components/diceware-passwordlength.js","components/diceware-components/diceware-language.js","dice.js","repository.js","components/diceware-main.js","components/project-info.js","index.js"],"names":["DicewareButton","props","generatePassword","bind","e","this","regeneratePassword","onClick","Component","DicewarePasswordRenderer","copyPasswordToClipboard","id","className","readOnly","rows","value","password","el","document","getElementById","select","execCommand","selectionStart","selectionEnd","DicewarePasswordSeparator","handleChange","updateSeparator","target","htmlFor","name","separator","onChange","DicewarePasswordLength","Number","updatePasswordLength","minPasswordLength","maxPasswordLength","passwordLength","type","min","max","DicewareLanguage","updatePasswordLanguage","getRandom","input","Uint32Array","window","crypto","getRandomValues","getWordsMap","language","url","Promise","resolve","headers","Headers","append","fetch","then","res","text","data","result","list","Array","from","split","newList","forEach","line","index","k","v","length","getWordsListFromString","loadWordsList","location","href","DicewarePasswordGenerator","state","repository","Map","updateLanguage","updateLanguageInternal","set","setState","has","len","allwords","words","get","fill","map","join","ProjectInfo","ApplicationName","App","render"],"mappings":"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","file":"static/js/main.669d68f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass DicewareButton extends Component {\n  constructor(props) {\n    super(props);\n    this.generatePassword = this.generatePassword.bind(this);\n  }\n\n  generatePassword(e) {\n    this.props.regeneratePassword(e);\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.generatePassword}>Generate password</button>\n      </div>\n    );\n  }\n}\n\nDicewareButton.propTypes = {\n  regeneratePassword: PropTypes.func.isRequired,\n};\n\nexport default DicewareButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass DicewarePasswordRenderer extends Component {\n  constructor(props) {\n    super(props);\n    this.copyPasswordToClipboard = this.copyPasswordToClipboard.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <textarea\n          id=\"passwordArea\"\n          className=\"password-area\"\n          readOnly\n          rows=\"1\"\n          value={this.props.password}\n        />\n        <button onClick={this.copyPasswordToClipboard}>\n          copy to clipboard\n        </button>\n      </div>\n    );\n  }\n\n  copyPasswordToClipboard() {\n    let el = document.getElementById(\"passwordArea\");\n    el.select();\n    document.execCommand(\"copy\");\n    el.selectionStart = el.selectionEnd;\n  }\n}\n\nDicewarePasswordRenderer.propTypes = {\n  password: PropTypes.string.isRequired,\n};\n\nexport default DicewarePasswordRenderer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass DicewarePasswordSeparator extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.updateSeparator(e.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <label className=\"column-left\" htmlFor=\"separatorInput\">\n          separator:{\" \"}\n        </label>\n        <input\n          name=\"separatorInput\"\n          className=\"column-right\"\n          value={this.props.separator}\n          onChange={this.handleChange}\n        ></input>\n      </div>\n    );\n  }\n}\n\nDicewarePasswordSeparator.propTypes = {\n  updateSeparator: PropTypes.func.isRequired,\n  separator: PropTypes.string.isRequired,\n};\n\nexport default DicewarePasswordSeparator;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass DicewarePasswordLength extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    let value = Number(e.target.value);\n    this.props.updatePasswordLength(value);\n  }\n\n  render() {\n    return (\n      <div>\n        <label className=\"column-left\" htmlFor=\"passwordLengthInput\">\n          words per password ({this.props.minPasswordLength}-\n          {this.props.maxPasswordLength}):{\" \"}\n        </label>\n        <input\n          name=\"passwordLengthInput\"\n          className=\"column-right\"\n          value={this.props.passwordLength}\n          onChange={this.handleChange}\n          type={\"number\"}\n          min={this.props.minPasswordLength}\n          max={this.props.maxPasswordLength}\n        ></input>\n      </div>\n    );\n  }\n}\n\nDicewarePasswordLength.propTypes = {\n  updatePasswordLength: PropTypes.func.isRequired,\n  passwordLength: PropTypes.number.isRequired,\n  maxPasswordLength: PropTypes.number.isRequired,\n  minPasswordLength: PropTypes.number.isRequired,\n};\n\nexport default DicewarePasswordLength;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\n\nclass DicewareLanguage extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.updatePasswordLanguage(e.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <label htmlFor=\"languageInput\" className=\"column-left\">\n          language:\n        </label>\n        <select\n          name=\"languageInput\"\n          className=\"column-right\"\n          onChange={this.handleChange}\n        >\n          <option value=\"en\">English</option>\n          <option value=\"fi\">Finnish</option>\n          <option value=\"mi\">Maori</option>\n          <option value=\"pl\">Polish</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nDicewareLanguage.propTypes = {\n  updatePasswordLanguage: propTypes.func.isRequired,\n};\n\nexport default DicewareLanguage;\n","let getRandom = function () {\n  let input = new Uint32Array(1);\n  window.crypto.getRandomValues(input);\n  return input[0];\n};\n\nexport default getRandom;\n","let getWordsMap = function (language) {\n  let url = window.location.href + \"diceware-\" + language + \".txt\";\n  return loadWordsList(url).then((data) => data);\n};\n\n// returns list (array) of words\nfunction getWordsListFromString(data) {\n  let list = Array.from(data.split(/\\n/));\n  let newList = null;\n\n  list.forEach((line, index) => {\n    let [k, v] = line.split(/\\s+/);\n    if (newList == null) {\n      newList = new Array(list.length);\n    }\n    newList[index] = v ? v : k;\n  });\n  return newList;\n}\n\nfunction loadWordsList(url) {\n  return new Promise((resolve) => {\n    let headers = new Headers();\n    headers.append(\"Content-type\", \"text/plain; charset=UTF-8\");\n    fetch(url, headers)\n      .then((res) => res.text())\n      .then((data) => {\n        let result = getWordsListFromString(data);\n        resolve(result);\n      });\n  });\n}\n\nexport default getWordsMap;\n","import React, { Component } from \"react\";\nimport DicewareButton from \"./diceware-components/diceware-button\";\nimport DicewarePasswordRenderer from \"./diceware-components/diceware-passwordrenderer\";\nimport DicewarePasswordSeparator from \"./diceware-components/diceware-passwordseparator\";\nimport DicewarePasswordLength from \"./diceware-components/diceware-passwordlength\";\nimport DicewareLanguage from \"./diceware-components/diceware-language\";\nimport getRandom from \"../dice\";\nimport getWordsMap from \"../repository\";\n\nconst MAX_PASSWORD_LENGHT = 10;\nconst MIN_PASSWORD_LENGTH = 4;\nconst DEFAULT_PASSWORD_LENGTH = 6;\n\nclass DicewarePasswordGenerator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repository: new Map(),\n      password: \"\",\n      language: \"en\",\n      separator: \"-\",\n      passwordLength: DEFAULT_PASSWORD_LENGTH,\n    };\n    this.generatePassword = this.generatePassword.bind(this);\n    this.updatePasswordLength = this.updatePasswordLength.bind(this);\n    this.updateSeparator = this.updateSeparator.bind(this);\n    this.updateLanguage = this.updateLanguage.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateLanguageInternal(this.state.language);\n  }\n\n  updateLanguageInternal(language) {\n    getWordsMap(language).then((result) => {\n      let repository = this.state.repository;\n      repository.set(language, result);\n      this.setState({ repository: repository });\n    });\n  }\n\n  updateLanguage(value) {\n    this.setState({ language: value });\n    if (!this.state.repository.has(value)) {\n      this.updateLanguageInternal(value);\n    }\n  }\n\n  updatePasswordLength(value) {\n    let len =\n      value > MAX_PASSWORD_LENGHT\n        ? MAX_PASSWORD_LENGHT\n        : value < MIN_PASSWORD_LENGTH\n        ? MIN_PASSWORD_LENGTH\n        : value;\n\n    this.setState({ passwordLength: len });\n  }\n\n  updateSeparator(value) {\n    this.setState({ separator: value });\n  }\n\n  generatePassword() {\n    let allwords = new Array(this.state.passwordLength);\n    let words = this.state.repository.get(this.state.language);\n    allwords = allwords.fill().map(() => words[getRandom() % words.length]);\n    let password = allwords.join(this.state.separator);\n    this.setState({ password: password });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <DicewareLanguage\n            updatePasswordLanguage={this.updateLanguage}\n          ></DicewareLanguage>\n          <DicewarePasswordLength\n            passwordLength={this.state.passwordLength}\n            updatePasswordLength={this.updatePasswordLength}\n            maxPasswordLength={MAX_PASSWORD_LENGHT}\n            minPasswordLength={MIN_PASSWORD_LENGTH}\n          ></DicewarePasswordLength>\n          <DicewarePasswordSeparator\n            separator={this.state.separator}\n            updateSeparator={this.updateSeparator}\n          ></DicewarePasswordSeparator>\n          <DicewareButton regeneratePassword={this.generatePassword} />\n          <DicewarePasswordRenderer password={this.state.password} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DicewarePasswordGenerator;\n","import React, { Component } from \"react\";\n\nclass ProjectInfo extends Component {\n  render() {\n    return (\n      <small>\n        <p>\n          this project on github:\n          <a href=\"https://github.com/MaciekTalaska/react-diceware\">\n            {\" \"}\n            react-diceware\n          </a>\n        </p>\n      </small>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport \"./style.css\";\nimport DicewarePasswordGenerator from \"./components/diceware-main\";\nimport ProjectInfo from \"./components/project-info\";\n\nclass ApplicationName extends Component {\n  render() {\n    return <h1>Diceware Password Generator (in ReactJS)</h1>;\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <ApplicationName />\n        <DicewarePasswordGenerator />\n        <ProjectInfo></ProjectInfo>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}