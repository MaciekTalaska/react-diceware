{"version":3,"sources":["components/diceware-components/ui/dpgbutton.js","components/diceware-components/ui/dpgdiv.js","components/diceware-components/diceware-generate-button.js","components/diceware-components/diceware-passwordrenderer.js","components/diceware-components/diceware-passwordseparator.js","components/diceware-components/diceware-passwordlength.js","components/diceware-components/diceware-language.js","components/dice.js","components/repository.js","components/diceware-components/ui/dpgcontainerdiv.js","components/diceware-main.js","components/project-info.js","index.js","components/diceware.module.css","components/diceware-components/ui/dpgui.module.css"],"names":["DpgButton","props","className","s","button","onClick","children","DpgDiv","div","DicewareGenerateButton","generatePassword","bind","e","this","regeneratePassword","Component","DicewarePasswordRenderer","copyPasswordToClipboard","id","styles","readOnly","rows","value","password","el","document","getElementById","select","execCommand","selectionStart","selectionEnd","DicewarePasswordSeparator","handleChange","updateSeparator","target","htmlFor","name","separator","onChange","DicewarePasswordLength","Number","updatePasswordLength","minPasswordLength","maxPasswordLength","passwordLength","type","min","max","DicewareLanguage","updatePasswordLanguage","getRandom","input","Uint32Array","window","crypto","getRandomValues","getWordsMap","language","url","Promise","resolve","headers","Headers","append","fetch","then","res","text","data","result","list","Array","from","split","newList","forEach","line","index","k","v","length","getWordsListFromString","loadWordsList","location","href","DpgContainerDiv","container","DicewarePasswordGenerator","state","repository","Map","updateLanguage","updateLanguageInternal","set","setState","has","len","allwords","words","get","fill","map","join","ProjectInfo","ApplicationName","App","render","module","exports"],"mappings":"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","file":"static/js/main.e09544c6.chunk.js","sourcesContent":["import React from \"react\";\nimport s from \"./dpgui.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction DpgButton(props) {\n  return (\n    <button className={s.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n}\n\nDpgButton.propTypes = {\n  children: PropTypes.any,\n  onClick: PropTypes.func,\n};\n\nexport default DpgButton;\n","import React from \"react\";\nimport s from \"./dpgui.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction DpgDiv(props) {\n  return <div className={s.div}>{props.children}</div>;\n}\n\nDpgDiv.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default DpgDiv;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DpgButton from \"./ui/dpgbutton\";\nimport DpgDiv from \"./ui/dpgdiv\";\n\nclass DicewareGenerateButton extends Component {\n  constructor(props) {\n    super(props);\n    this.generatePassword = this.generatePassword.bind(this);\n  }\n\n  generatePassword(e) {\n    this.props.regeneratePassword(e);\n  }\n\n  render() {\n    return (\n      <DpgDiv>\n        <DpgButton onClick={this.generatePassword}>Generate password</DpgButton>\n      </DpgDiv>\n    );\n  }\n}\n\nDicewareGenerateButton.propTypes = {\n  regeneratePassword: PropTypes.func.isRequired,\n};\n\nexport default DicewareGenerateButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../diceware.module.css\";\nimport DpgButton from \"./ui/dpgbutton\";\nimport DpgDiv from \"./ui/dpgdiv\";\n\nclass DicewarePasswordRenderer extends Component {\n  constructor(props) {\n    super(props);\n    this.copyPasswordToClipboard = this.copyPasswordToClipboard.bind(this);\n  }\n\n  render() {\n    return (\n      <DpgDiv>\n        <textarea\n          id=\"passwordArea\"\n          className={styles[\"password-area\"]}\n          readOnly\n          rows=\"2\"\n          value={this.props.password}\n        />\n        <DpgButton onClick={this.copyPasswordToClipboard}>\n          copy to clipboard\n        </DpgButton>\n      </DpgDiv>\n    );\n  }\n\n  copyPasswordToClipboard() {\n    let el = document.getElementById(\"passwordArea\");\n    el.select();\n    document.execCommand(\"copy\");\n    el.selectionStart = el.selectionEnd;\n  }\n}\n\nDicewarePasswordRenderer.propTypes = {\n  password: PropTypes.string.isRequired,\n};\n\nexport default DicewarePasswordRenderer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../diceware.module.css\";\nimport DpgDiv from \"./ui/dpgdiv\";\n\nclass DicewarePasswordSeparator extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.updateSeparator(e.target.value);\n  }\n\n  render() {\n    return (\n      <DpgDiv>\n        <label className={styles[\"column-left\"]} htmlFor=\"separatorInput\">\n          separator:{\" \"}\n        </label>\n        <input\n          name=\"separatorInput\"\n          className={styles[\"column-right\"]}\n          value={this.props.separator}\n          onChange={this.handleChange}\n        />\n      </DpgDiv>\n    );\n  }\n}\n\nDicewarePasswordSeparator.propTypes = {\n  updateSeparator: PropTypes.func.isRequired,\n  separator: PropTypes.string.isRequired,\n};\n\nexport default DicewarePasswordSeparator;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../diceware.module.css\";\nimport DpgDiv from \"./ui/dpgdiv\";\n\nclass DicewarePasswordLength extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    let value = Number(e.target.value);\n    this.props.updatePasswordLength(value);\n  }\n\n  render() {\n    return (\n      <DpgDiv>\n        <label className={styles[\"column-left\"]} htmlFor=\"passwordLengthInput\">\n          words per password ({this.props.minPasswordLength}-\n          {this.props.maxPasswordLength}):{\" \"}\n        </label>\n        <input\n          name=\"passwordLengthInput\"\n          className={styles[\"column-right\"]}\n          value={this.props.passwordLength}\n          onChange={this.handleChange}\n          type={\"number\"}\n          min={this.props.minPasswordLength}\n          max={this.props.maxPasswordLength}\n        />\n      </DpgDiv>\n    );\n  }\n}\n\nDicewarePasswordLength.propTypes = {\n  updatePasswordLength: PropTypes.func.isRequired,\n  passwordLength: PropTypes.number.isRequired,\n  maxPasswordLength: PropTypes.number.isRequired,\n  minPasswordLength: PropTypes.number.isRequired,\n};\n\nexport default DicewarePasswordLength;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport styles from \"../diceware.module.css\";\nimport DpgDiv from \"./ui/dpgdiv\";\n\nclass DicewareLanguage extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.updatePasswordLanguage(e.target.value);\n  }\n\n  render() {\n    return (\n      <DpgDiv>\n        <label htmlFor=\"languageInput\" className={styles[\"column-left\"]}>\n          language:\n        </label>\n        <select\n          name=\"languageInput\"\n          className={styles[\"column-right\"]}\n          onChange={this.handleChange}\n        >\n          <option value=\"en\">English</option>\n          <option value=\"fi\">Finnish</option>\n          <option value=\"mi\">Maori</option>\n          <option value=\"pl\">Polish</option>\n        </select>\n      </DpgDiv>\n    );\n  }\n}\n\nDicewareLanguage.propTypes = {\n  updatePasswordLanguage: propTypes.func.isRequired,\n};\n\nexport default DicewareLanguage;\n","let getRandom = function () {\n  let input = new Uint32Array(1);\n  window.crypto.getRandomValues(input);\n  return input[0];\n};\n\nexport default getRandom;\n","let getWordsMap = function (language) {\n  let url = window.location.href + \"diceware-\" + language + \".txt\";\n  return loadWordsList(url).then((data) => data);\n};\n\n// returns list (array) of words\nfunction getWordsListFromString(data) {\n  let list = Array.from(data.split(/\\n/));\n  let newList = null;\n\n  list.forEach((line, index) => {\n    let [k, v] = line.split(/\\s+/);\n    if (newList == null) {\n      newList = new Array(list.length);\n    }\n    newList[index] = v ? v : k;\n  });\n  return newList;\n}\n\nfunction loadWordsList(url) {\n  return new Promise((resolve) => {\n    let headers = new Headers();\n    headers.append(\"Content-type\", \"text/plain; charset=UTF-8\");\n    fetch(url, headers)\n      .then((res) => res.text())\n      .then((data) => {\n        let result = getWordsListFromString(data);\n        resolve(result);\n      });\n  });\n}\n\nexport default getWordsMap;\n","import React from \"react\";\nimport s from \"./dpgui.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction DpgContainerDiv(props) {\n  return <div className={s.container}>{props.children}</div>;\n}\n\nDpgContainerDiv.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default DpgContainerDiv;\n","import React, { Component } from \"react\";\nimport DicewareGenerateButton from \"./diceware-components/diceware-generate-button\";\nimport DicewarePasswordRenderer from \"./diceware-components/diceware-passwordrenderer\";\nimport DicewarePasswordSeparator from \"./diceware-components/diceware-passwordseparator\";\nimport DicewarePasswordLength from \"./diceware-components/diceware-passwordlength\";\nimport DicewareLanguage from \"./diceware-components/diceware-language\";\nimport getRandom from \"./dice\";\nimport getWordsMap from \"./repository\";\nimport DpgDiv from \"./diceware-components/ui/dpgdiv\";\nimport DpgContainerDiv from \"./diceware-components/ui/dpgcontainerdiv\";\n\nconst MAX_PASSWORD_LENGTH = 10;\nconst MIN_PASSWORD_LENGTH = 4;\nconst DEFAULT_PASSWORD_LENGTH = 6;\n\nclass DicewarePasswordGenerator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repository: new Map(),\n      password: \"\",\n      language: \"en\",\n      separator: \"-\",\n      passwordLength: DEFAULT_PASSWORD_LENGTH,\n    };\n    this.generatePassword = this.generatePassword.bind(this);\n    this.updatePasswordLength = this.updatePasswordLength.bind(this);\n    this.updateSeparator = this.updateSeparator.bind(this);\n    this.updateLanguage = this.updateLanguage.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateLanguageInternal(this.state.language);\n  }\n\n  updateLanguageInternal(language) {\n    getWordsMap(language).then((result) => {\n      let repository = this.state.repository;\n      repository.set(language, result);\n      this.setState({ repository: repository });\n    });\n  }\n\n  updateLanguage(value) {\n    this.setState({ language: value });\n    if (!this.state.repository.has(value)) {\n      this.updateLanguageInternal(value);\n    }\n  }\n\n  updatePasswordLength(value) {\n    let len =\n      value > MAX_PASSWORD_LENGTH\n        ? MAX_PASSWORD_LENGTH\n        : value < MIN_PASSWORD_LENGTH\n        ? MIN_PASSWORD_LENGTH\n        : value;\n\n    this.setState({ passwordLength: len });\n  }\n\n  updateSeparator(value) {\n    this.setState({ separator: value });\n  }\n\n  generatePassword() {\n    let allwords = new Array(this.state.passwordLength);\n    let words = this.state.repository.get(this.state.language);\n    allwords = allwords.fill().map(() => words[getRandom() % words.length]);\n    let password = allwords.join(this.state.separator);\n    this.setState({ password: password });\n  }\n\n  render() {\n    return (\n      <DpgDiv>\n        <DpgContainerDiv>\n          <DicewareLanguage updatePasswordLanguage={this.updateLanguage} />\n          <DicewarePasswordLength\n            passwordLength={this.state.passwordLength}\n            updatePasswordLength={this.updatePasswordLength}\n            maxPasswordLength={MAX_PASSWORD_LENGTH}\n            minPasswordLength={MIN_PASSWORD_LENGTH}\n          />\n          <DicewarePasswordSeparator\n            separator={this.state.separator}\n            updateSeparator={this.updateSeparator}\n          />\n          <DicewareGenerateButton regeneratePassword={this.generatePassword} />\n          <DicewarePasswordRenderer password={this.state.password} />\n        </DpgContainerDiv>\n      </DpgDiv>\n    );\n  }\n}\n\nexport default DicewarePasswordGenerator;\n","import React, { Component } from \"react\";\n\nclass ProjectInfo extends Component {\n  render() {\n    return (\n      <small>\n        <p>\n          this project on github:\n          <a href=\"https://github.com/MaciekTalaska/react-diceware\">\n            {\" \"}\n            react-diceware\n          </a>\n        </p>\n      </small>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport \"./style.css\";\nimport DicewarePasswordGenerator from \"./components/diceware-main\";\nimport ProjectInfo from \"./components/project-info\";\n\nclass ApplicationName extends Component {\n  render() {\n    return <h1>Diceware Password Generator (in ReactJS)</h1>;\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <ApplicationName />\n        <DicewarePasswordGenerator />\n        <ProjectInfo />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column-left\":\"diceware_column-left__1ZjDF\",\"column-right\":\"diceware_column-right__tVCo8\",\"password-area\":\"diceware_password-area__tY-ec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"dpgui_button__3JOhA\",\"container\":\"dpgui_container__1kmxx\",\"div\":\"dpgui_div__3vej-\"};"],"sourceRoot":""}